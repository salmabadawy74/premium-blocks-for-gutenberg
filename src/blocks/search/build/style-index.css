/*!******************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[3]!./search/style.scss ***!
  \******************************************************************************************************************************************************************************************************************************************/
/**
 * Colors
 */
/**
 * SCSS Variables.
 *
 * Please use variables from this sheet to ensure consistency across the UI.
 * Don't add to this sheet unless you're pretty sure the value will be reused in many places.
 * For example, don't add rules to this sheet that affect block visuals. It's purely for UI.
 */
/**
 * Colors
 */
/**
 * Fonts & basic variables.
 */
/**
 * Grid System.
 * https://make.wordpress.org/design/2019/10/31/proposal-a-consistent-spacing-system-for-wordpress/
 */
/**
 * Dimensions.
 */
/**
 * Shadows.
 */
/**
 * Editor widths.
 */
/**
 * Block & Editor UI.
 */
/**
 * Block paddings.
 */
/**
 * React Native specific.
 * These variables do not appear to be used anywhere else.
 */
/**
*  Converts a hex value into the rgb equivalent.
*
* @param {string} hex - the hexadecimal value to convert
* @return {string} comma separated rgb values
*/
/**
 * Breakpoint mixins
 */
/**
 * Long content fade mixin
 *
 * Creates a fading overlay to signify that the content is longer
 * than the space allows.
 */
/**
 * Focus styles.
 */
/**
 * Applies editor left position to the selector passed as argument
 */
/**
 * Styles that are reused verbatim in a few places
 */
/**
 * Allows users to opt-out of animations via OS-level preferences.
 */
/**
 * Reset default styles for JavaScript UI based pages.
 * This is a WP-admin agnostic reset
 */
/**
 * Reset the WP Admin page styles for Gutenberg-like pages.
 */
/**
 * Breakpoints & Media Queries
 */
:root {
  --wp-admin-theme-color: #007cba;
  --wp-admin-theme-color--rgb: 0, 124, 186;
  --wp-admin-theme-color-darker-10: #006ba1;
  --wp-admin-theme-color-darker-10--rgb: 0, 107, 161;
  --wp-admin-theme-color-darker-20: #005a87;
  --wp-admin-theme-color-darker-20--rgb: 0, 90, 135;
  --wp-admin-border-width-focus: 2px;
}
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  :root {
    --wp-admin-border-width-focus: 1.5px;
  }
}

.wp-block-premium-search-button-style .wp-block-premium-search__button {
  margin-left: 0;
}

.wp-block-premium-search__button {
  background: #f7f7f7;
  border: 1px solid #ccc;
  padding: 0.375em 0.625em;
  color: #32373c;
  margin-left: 0.625em;
  word-break: normal;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.wp-block-premium-search__button.has-icon {
  line-height: 0;
}
.wp-block-premium-search__button svg {
  min-width: 1.5em;
  min-height: 1.5em;
  fill: currentColor;
}

.wp-block-premium-search__inside-wrapper {
  display: flex;
  flex: auto;
  flex-wrap: nowrap;
  max-width: 100%;
}

.wp-block-premium-search__label {
  width: 100%;
}

.wp-block-premium-search__input {
  padding: 8px;
  flex-grow: 1;
  min-width: 3em;
  border: 1px solid #949494;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.wp-block-premium-search.wp-block-premium-search__button-only .wp-block-premium-search__button {
  margin-left: 0;
}

.wp-block-premium-search.wp-block-premium-search__button-inside .wp-block-premium-search__inside-wrapper {
  padding: 4px;
  border: 1px solid #949494;
}
.wp-block-premium-search.wp-block-premium-search__button-inside .wp-block-premium-search__inside-wrapper .wp-block-premium-search__input {
  border-radius: 0;
  border: none !important;
  padding: 0 0 0 0.25em;
}
.wp-block-premium-search.wp-block-premium-search__button-inside .wp-block-premium-search__inside-wrapper .wp-block-premium-search__input:focus {
  outline: none;
}
.wp-block-premium-search.wp-block-premium-search__button-inside .wp-block-premium-search__inside-wrapper .wp-block-premium-search__button {
  padding: 0.125em 0.5em;
}

.wp-block-premium-search.aligncenter .wp-block-premium-search__inside-wrapper {
  margin: auto;
}

.searchBlockContainer {
  flex: 1;
  flex-direction: column;
}

.searchBarContainer {
  flex: 1;
  flex-direction: row;
  justify-content: flex-start;
  width: 100%;
}

.searchInputContainer {
  flex: 1;
  flex-grow: 1;
  flex-shrink: 1;
}

.border {
  border: 1px solid #dcdcde;
  border-radius: 4px;
  padding: 4px;
}

.borderDark {
  border: 1px solid #2c3338;
}

.buttonContainer {
  background: #595959;
  padding: 8px;
  border: 1px solid #595959;
  margin-left: 4px;
  border-radius: 4px;
  align-content: center;
  align-items: center;
}

.buttonContainerWide {
  margin-left: 0;
  margin-top: 4px;
}

.icon {
  fill: #fff;
  background-color: transparent;
}

.richTextLabel {
  background-color: transparent;
  margin-top: 8px;
  margin-bottom: 8px;
  font-size: 16px;
  font-weight: 400;
  font-family: serif;
  width: 100%;
}

.richTextButton {
  color: #fff;
  font-size: 16px;
  font-weight: 400;
  background-color: transparent;
  font-family: serif;
  padding-left: 8px;
  padding-right: 8px;
  margin: 0;
  text-align: center;
  min-height: 24px;
}

.richTextButtonCursor {
  color: #ddd;
}

.plainTextInput {
  min-height: 42px;
  padding: 4px;
  padding-left: 8px;
  font-family: serif;
  color: #1d2327;
}

.plainTextInputDark {
  color: #c3c4c7;
}

.plainTextPlaceholder {
  color: #87a6bc;
}

.plainTextPlaceholderDark {
  color: #646970;
}

.widthMargin {
  margin: 16px;
  padding: 4px;
}

/*# sourceMappingURL=style-index.css.map*/