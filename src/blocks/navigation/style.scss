// Navigation block and menu item styles.
// These styles also affect the Page List block when used inside your navigation block.
//
// Classes:
// - .premium-navigation__submenu-container targets submenu containers.
// - .premium-navigation-item targets the menu item itself.
// - .premium-navigation-item__content targets the link inside a menu item.
// - .premium-navigation__submenu-icon targets the chevron icon indicating submenus.

@import "node_modules/@wordpress/base-styles/colors";
@import "node_modules/@wordpress/base-styles/variables";
@import "node_modules/@wordpress/base-styles/mixins";
@import "node_modules/@wordpress/base-styles/breakpoints";
@import "node_modules/@wordpress/base-styles/animations";
@import "node_modules/@wordpress/base-styles/z-index";
@import "node_modules/@wordpress/base-styles/default-custom-properties";

// Size of burger and close icons.
$navigation-icon-size: 24px;

.wp-block-premium-navigation {
    position: relative;
    line-height: 4;
    &.submenu-box-shadow {
        > div:not(.premium-navigation__responsive-container.is-menu-open),
        .premium-navigation__container {
            .premium-navigation__submenu-container {
                box-shadow: 0 3px 13px 0 rgb(0, 0, 0, 0.2);
            }
        }
    }
    &.effect-underline-stroke {
        > div:not(.premium-navigation__responsive-container.is-menu-open),
        > div:not(.premium-navigation__responsive-container.is-menu-open)
            .premium-navigation__container {
            > .premium-navigation-item {
                > .premium-navigation-item__content {
                    position: relative;
                    &::after {
                        position: absolute;
                        bottom: 0;
                        left: 0;
                        right: 0;
                        margin: auto;
                        width: 0%;
                        content: "";
                        background: currentColor;
                        height: 1px;
                        transition: all 0.5s;
                    }
                }
            }
            > .premium-navigation-item:hover {
                > .premium-navigation-item__content {
                    &::after {
                        width: 100%;
                    }
                }
            }
        }
    }
    &.effect-underline-fill {
        > div:not(.premium-navigation__responsive-container.is-menu-open),
        > div:not(.premium-navigation__responsive-container.is-menu-open)
            .premium-navigation__container {
            > .premium-navigation-item {
                > .premium-navigation-item__content {
                    display: block;
                    position: relative;
                    transition: all 1.5s;
                    display: block;
                    &::after {
                        text-align: left;
                        content: ".";
                        margin: 0;
                        opacity: 0;
                        position: absolute;
                        bottom: 0;
                        left: 0;
                        right: 0;
                        width: 0%;
                        color: transparent;
                        background: var(
                            --pbg-links-hover-color,
                            var(--wp--preset--color--primary)
                        );
                        height: 1px;
                    }
                }
            }
            > .premium-navigation-item:hover {
                > .premium-navigation-item__content {
                    z-index: 1;
                    color: #fff !important;
                    &::after {
                        z-index: -10;
                        animation: fill 1s forwards;
                        -webkit-animation: fill 1s forwards;
                        -moz-animation: fill 1s forwards;
                        opacity: 1;
                        width: 100%;
                        height: 100%;
                    }
                }
            }
        }
    }
    &.effect-underline-dots {
        > div:not(.premium-navigation__responsive-container.is-menu-open),
        > div:not(.premium-navigation__responsive-container.is-menu-open)
            .premium-navigation__container {
            > .premium-navigation-item {
                > .premium-navigation-item__content {
                    position: relative;
                    &::before {
                        position: absolute;
                        top: 35%;
                        left: 50%;
                        color: transparent;
                        content: "â€¢";
                        text-shadow: transparent 0px 0px;
                        font-size: 1em;
                        transform: translateX(-50%);
                        pointer-events: none;
                        transition: text-shadow 0.3s ease 0s, color 0.3s ease 0s;
                    }
                }
            }
            > .premium-navigation-item:hover {
                > .premium-navigation-item__content {
                    &::before {
                        color: currentColor;
                        text-shadow: 10px 0 currentColor, -10px 0 currentColor;
                    }
                }
            }
        }
    }
    &.effect-textcolor-fill {
        > div:not(.premium-navigation__responsive-container.is-menu-open),
        > div:not(.premium-navigation__responsive-container.is-menu-open)
            .premium-navigation__container {
            > .premium-navigation-item {
                > .premium-navigation-item__content {
                    background: linear-gradient(
                                var(
                                    --pbg-links-hover-color,
                                    var(--wp--preset--color--primary)
                                ),
                                var(
                                    --pbg-links-hover-color,
                                    var(--wp--preset--color--primary)
                                )
                            )
                            left no-repeat,
                        var(--pbg-links-color);
                    background-size: 0% 100%;
                    background-clip: text;
                    color: transparent;
                    -webkit-background-clip: text;
                    -webkit-text-fill-color: transparent;
                    transition: 1.3s;
                }
            }
            .kmt-svg-icon {
                svg {
                    fill: var(--pbg-links-color);
                }
            }
            > .premium-navigation-item {
                > .premium-navigation-item__content {
                    background-color: var(--pbg-links-color) !important;
                }
            }
            > .premium-navigation-item:hover {
                > .premium-navigation-item__content {
                    background-size: 100% 100%;
                }
            }
        }
    }
    &.effect-topbottom-lines {
        > div:not(.premium-navigation__responsive-container.is-menu-open),
        > div:not(.premium-navigation__responsive-container.is-menu-open)
            .premium-navigation__container {
            > .premium-navigation-item {
                > .premium-navigation-item__content {
                    &::after,
                    &::before {
                        position: absolute;
                        width: 45px;
                        height: 2px;
                        background: var(
                            --pbg-links-hover-color,
                            var(--wp--preset--color--primary)
                        );
                        content: "";
                        opacity: 0.2;
                        -webkit-transition: all 0.3s;
                        -moz-transition: all 0.3s;
                        transition: all 0.3s;
                        pointer-events: none;
                    }
                    &::before {
                        top: 15%;
                        left: 0;
                        -webkit-transform: rotate(90deg);
                        -moz-transform: rotate(90deg);
                        transform: rotate(90deg);
                        -webkit-transform-origin: 0 0;
                        -moz-transform-origin: 0 0;
                        transform-origin: 0 0;
                        opacity: 0;
                    }
                    &::after {
                        right: 0;
                        bottom: 15%;
                        -webkit-transform: rotate(90deg);
                        -moz-transform: rotate(90deg);
                        transform: rotate(90deg);
                        -webkit-transform-origin: 100% 0;
                        -moz-transform-origin: 100% 0;
                        transform-origin: 100% 0;
                        opacity: 0;
                    }
                }
            }
            > .premium-navigation-item:hover {
                > .premium-navigation-item__content {
                    &::before {
                        left: 50%;
                        -webkit-transform: rotate(0deg) translateX(-50%);
                        -moz-transform: rotate(0deg) translateX(-50%);
                        transform: rotate(0deg) translateX(-50%);
                        opacity: 1;
                    }
                    &::after {
                        right: 50%;
                        -webkit-transform: rotate(0deg) translateX(50%);
                        -moz-transform: rotate(0deg) translateX(50%);
                        transform: rotate(0deg) translateX(50%);
                        opacity: 1;
                    }
                }
            }
        }
    }
    &.open-on-click {
        &.submenu-fade {
            .premium-navigation-item.wp-block-premium-navigation-submenu.is-selected {
                > .premium-navigation__submenu-container {
                    opacity: 1 !important;
                }
            }
            .premium-navigation__submenu-container {
                opacity: 0 !important;
                transition: opacity 0.7s ease-in-out;
                .premium-navigation-item.wp-block-premium-navigation-submenu.is-selected {
                    > .premium-navigation__submenu-container {
                        opacity: 1 !important;
                    }
                }
            }
        }
        &.submenu-fade-up {
            .premium-navigation-item.wp-block-premium-navigation-submenu.is-selected {
                > .premium-navigation__submenu-container {
                    -webkit-transform: translateY(0);
                    -ms-transform: translateY(0);
                    transform: translateY(0);
                    opacity: 1;
                }
            }
            .premium-navigation__submenu-container {
                transition: opacity 0.7s ease-in-out;
                .premium-navigation-item.wp-block-premium-navigation-submenu.is-selected {
                    > .premium-navigation__submenu-container {
                        -webkit-transform: translateY(4px);
                        -ms-transform: translateY(4px);
                        transform: translateY(4px);
                        opacity: 0;
                        transition: transform 0.4s ease-in-out,
                            opacity 0.4s ease-in-out;
                    }
                }
            }
        }
        &.submenu-fade-down {
            .premium-navigation-item.wp-block-premium-navigation-submenu.is-selected {
                > .premium-navigation__submenu-container {
                    -webkit-transform: translateY(0);
                    -ms-transform: translateY(0);
                    transform: translateY(0);
                    opacity: 1;
                }
            }
            .premium-navigation__submenu-container {
                transition: opacity 0.7s ease-in-out;
                .premium-navigation-item.wp-block-premium-navigation-submenu.is-selected {
                    > .premium-navigation__submenu-container {
                        -webkit-transform: translateY(-10px);
                        -ms-transform: translateY(-10px);
                        transform: translateY(-10px);
                        opacity: 0;
                        transition: transform 0.4s ease-in-out,
                            opacity 0.4s ease-in-out;
                    }
                }
            }
        }
    }
    &:not(.open-on-click) {
        &.submenu-fade {
            .premium-navigation-item {
                &:hover > .premium-navigation__submenu-container,
                &.focus > .premium-navigation__submenu-container {
                    opacity: 1;
                }
            }
            .premium-navigation__submenu-container {
                opacity: 0;
                transition: opacity 0.7s ease-in-out;
                .premium-navigation-item {
                    &:hover > .premium-navigation__submenu-container,
                    &.focus > .premium-navigation__submenu-container {
                        opacity: 1;
                    }
                }
            }
        }
        &.submenu-fade-up {
            .premium-navigation-item {
                &:hover > .premium-navigation__submenu-container,
                &.focus > .premium-navigation__submenu-container {
                    -webkit-transform: translateY(0);
                    -ms-transform: translateY(0);
                    transform: translateY(0);
                    opacity: 1;
                }
            }
            .premium-navigation__submenu-container {
                -webkit-transform: translateY(4px);
                -ms-transform: translateY(4px);
                transform: translateY(4px);
                opacity: 0;
                transition: transform 0.4s ease-in-out, opacity 0.4s ease-in-out;
            }
        }
        &.submenu-fade-down {
            .premium-navigation-item {
                &:hover > .premium-navigation__submenu-container,
                &.focus > .premium-navigation__submenu-container {
                    -webkit-transform: translateY(0);
                    -ms-transform: translateY(0);
                    transform: translateY(0);
                    opacity: 1;
                }
            }
            .premium-navigation__submenu-container {
                -webkit-transform: translateY(-10px);
                -ms-transform: translateY(-10px);
                transform: translateY(-10px);
                opacity: 0;
                transition: transform 0.4s ease-in-out, opacity 0.4s ease-in-out;
            }
        }
    }

    // Normalize list styles.
    ul {
        margin-top: 0;
        margin-bottom: 0;
        margin-left: 0;
        padding-left: 0;
    }

    ul,
    ul li {
        list-style: none;

        // Overrides generic ".entry-content li" styles on the front end.
        padding: 0;
    }

    // Menu item container.
    .premium-navigation-item {
        display: flex;
        align-items: center;
        position: relative;

        .pbg-navigation-link-icon {
            vertical-align: middle;
            margin-right: 5px;
            font-size: 15px;
            width: 15px;
            height: 15px;
        }
        .pbg-navigation-link-label {
            font-size: 0.7em;
            margin-left: 10px;
            line-height: normal;
            padding: 3px 6px;
            border-radius: 2px;
            color: var(--pbg-navigation-link-badge-color, "#ffffff");
            background-color: var(
                --pbg-navigation-link-badge-bg-color,
                var(--wp--preset--color--primary)
            );
        }
        .premium-navigation__submenu-container:empty {
            display: none;
        }
    }

    // Menu item link.
    // By adding low specificity, we enable compatibility with link colors set in theme.json,
    // but still allow them to be overridden by user-set colors.
    .premium-navigation-item__content {
        color: var(--pbg-links-color, inherit);
        display: block;

        // Set the default menu item padding to zero, to allow text-only buttons.
        padding: 0;

        &:hover {
            color: var(
                --pbg-links-hover-color,
                var(--wp--preset--color--primary)
            );
        }
    }

    // Force links to inherit text decoration applied to navigation block.
    // The extra selector adds specificity to ensure it works when user-set.
    &[style*="text-decoration"] {
        .premium-navigation-item,
        .premium-navigation__submenu-container {
            text-decoration: inherit;
        }

        a {
            text-decoration: inherit;

            &:focus,
            &:active {
                text-decoration: inherit;
            }
        }
    }

    &:not([style*="text-decoration"]) {
        a {
            text-decoration: none;

            &:focus,
            &:active {
                text-decoration: none;
            }
        }
    }

    // Submenu indicator.
    .premium-navigation__submenu-icon {
        align-self: center; // This one affects nested submenu indicators.
        line-height: 0;
        display: inline-block;
        font-size: inherit;

        // Affect the button as well.
        padding: 0;
        background-color: inherit;
        color: currentColor;
        border: none;

        // Scale to font size.
        width: 0.6em;
        height: 0.6em;
        margin-left: 0.25em;

        svg {
            display: inline-block;
            stroke: currentColor;
            width: inherit;
            height: inherit;

            // Position the arrow to balance with the the text.
            margin-top: 0.075em;
        }
    }

    // Custom properties for layout style cascade: default values.
    --navigation-layout-justification-setting: flex-start;
    --navigation-layout-direction: row;
    --navigation-layout-wrap: wrap;
    --navigation-layout-justify: flex-start;
    --navigation-layout-align: center;

    &.is-vertical {
        --navigation-layout-direction: column;
        --navigation-layout-justify: initial;
        --navigation-layout-align: flex-start;
    }

    &.no-wrap {
        --navigation-layout-wrap: nowrap;
    }

    &.items-justified-center {
        --navigation-layout-justification-setting: center;
        --navigation-layout-justify: center;

        &.is-vertical {
            --navigation-layout-align: center;
        }
    }

    &.items-justified-right {
        --navigation-layout-justification-setting: flex-end;
        --navigation-layout-justify: flex-end;

        &.is-vertical {
            --navigation-layout-align: flex-end;
        }
    }

    &.items-justified-space-between {
        --navigation-layout-justification-setting: space-between;
        --navigation-layout-justify: space-between;
    }
}

// Styles for submenu flyout.
// These are separated out with reduced specificity to allow better inheritance from Global Styles.
.wp-block-premium-navigation .has-child {
    // We use :where to keep specificity minimal, yet still scope it to only the navigation block.
    // That way if padding is set in theme.json, it still wins.
    // https://css-tricks.com/almanac/selectors/w/where/
    :where(.premium-navigation__submenu-container) {
        background-color: inherit;
        color: inherit;
        position: absolute;
        z-index: 2;
        display: flex;
        flex-direction: column;
        align-items: normal;

        // Hide until hover or focus within.
        opacity: 0;
        transition: opacity 0.1s linear;
        visibility: hidden;

        // Don't take up space when the menu is collapsed.
        width: 0;
        height: 0;
        overflow: hidden; // Overflow is necessary to set, otherwise submenu items will take up space.

        // Submenu items.
        > .premium-navigation-item {
            > .premium-navigation-item__content {
                display: flex;
                flex-grow: 1;

                // Right-align the chevron in submenus.
                .premium-navigation__submenu-icon {
                    margin-right: 0;
                    margin-left: auto;
                }
            }
        }

        // Spacing in all submenus.
        .premium-navigation-item__content {
            margin: 0;
        }

        // Submenu indentation when there's no background.
        left: -1px; // Border width.
        top: 100%;

        // Indentation for all submenus.
        // Nested submenus sit to the left on large breakpoints.
        // On smaller breakpoints, they open vertically, accordion-style.
        @include break-medium {
            .premium-navigation__submenu-container {
                left: 100%;
                top: -1px; // Border width.

                // Prevent the menu from disappearing when the mouse is over the gap
                &::before {
                    content: "";
                    position: absolute;
                    right: 100%;
                    height: 100%;
                    display: block;
                    width: 0.5em;
                    background: transparent;
                }
            }

            // Push inwards from right edge of submenu.
            .premium-navigation__submenu-icon {
                margin-right: 0.25em;
            }

            // Reset the submenu indicator for horizontal flyouts.
            .premium-navigation__submenu-icon svg {
                transform: rotate(-90deg);
            }
        }
    }

    // Custom menu items.
    // Show submenus on hover unless they open on click.
    &:where(:not(.open-on-click)):hover
        > .premium-navigation__submenu-container {
        visibility: visible;
        overflow: visible;
        opacity: 1;
        width: auto;
        height: auto;
        min-width: 200px;
    }

    // Keep submenus open when focus is within.
    &:where(:not(.open-on-click):not(.open-on-hover-click)):focus-within
        > .premium-navigation__submenu-container {
        visibility: visible;
        overflow: visible;
        opacity: 1;
        width: auto;
        height: auto;
        min-width: 200px;
    }

    // Show submenus on click.
    .premium-navigation-submenu__toggle[aria-expanded="true"]
        ~ .premium-navigation__submenu-container {
        visibility: visible;
        overflow: visible;
        opacity: 1;
        width: auto;
        height: auto;
        min-width: 200px;
    }
}

// Submenu indentation when there's a background.
.wp-block-premium-navigation.has-background
    .has-child
    .premium-navigation__submenu-container {
    left: 0;
    top: 100%;

    // There's no border on submenus when there are backgrounds.
    @include break-medium {
        .premium-navigation__submenu-container {
            left: 100%;
            top: 0;
        }
    }
}

// General submenu colors.
// These styles are stored here as opposed to in the separate submenu block,
// so that they can affect both submenus and page lists with submenu items both.
.premium-navigation-submenu {
    position: relative;
    display: flex;

    .premium-navigation__submenu-icon svg {
        stroke: currentColor;
    }
}

button.premium-navigation-item__content {
    background-color: transparent;
    border: none;
    color: currentColor;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;

    // Buttons default to center alignment. This becomes visible
    // when a menu item label is long enough to wrap.
    text-align: left;
}

.premium-navigation-submenu__toggle {
    cursor: pointer;
}

// When set to open on click, a button element is used.
// We pad it to include the arrow icon in the clickable area.
// The padding can be blanket for click, since you can't set click and hide the icon.
.premium-navigation-item.open-on-click .premium-navigation-submenu__toggle {
    padding-right: 0.6em + 0.25em; // Same size as icon plus margin.

    + .premium-navigation__submenu-icon {
        margin-left: -0.6em;
        pointer-events: none; // Make the icon inert to allow click on the button.
    }
}

/**
 * Margins
 */

// Menu items with no background.
.premium-navigation__responsive-container,
.premium-navigation__responsive-close,
.premium-navigation__responsive-dialog,
.wp-block-premium-navigation,
.wp-block-premium-navigation .wp-block-page-list,
.premium-navigation__container,
.premium-navigation__responsive-container-content {
    gap: inherit;
}

// Menu items with background.
// We use :where to keep specificity minimal, yet still scope it to only the navigation block.
// That way if padding is set in theme.json, it still wins.
// https://css-tricks.com/almanac/selectors/w/where/
.wp-block-premium-navigation:where(.has-background) {
    &,
    .wp-block-premium-navigation .wp-block-page-list,
    .premium-navigation__container {
        gap: inherit;
    }
}

/**
 * Paddings
 */

// We use :where to keep specificity minimal, yet still scope it to only the navigation block.
// That way if padding is set in theme.json, it still wins.
// https://css-tricks.com/almanac/selectors/w/where/

// When the menu has a background, items have paddings, reduce margins to compensate.
// Treat margins and paddings differently when the block has a background.
.wp-block-premium-navigation:where(.has-background)
    .premium-navigation-item__content {
    padding: 0.5em 1em;
}

// Provide a default padding for submenus who should always have some, regardless of the top level menu items.
.wp-block-premium-navigation
    :where(.premium-navigation__submenu-container)
    .premium-navigation-item__content {
    padding: 0.5em 1em;
}

/**
 * Justifications.
 */

// When justified space-between, open submenus leftward for last menu item.
// When justified right, open all submenus leftwards.
// This needs high specificity.
.wp-block-premium-navigation.items-justified-space-between
    .wp-block-page-list
    > .has-child:last-child,
.wp-block-premium-navigation.items-justified-space-between
    > .premium-navigation__container
    > .has-child:last-child,
.wp-block-premium-navigation.items-justified-right
    .wp-block-page-list
    > .has-child,
.wp-block-premium-navigation.items-justified-right
    .premium-navigation__container
    .has-child {
    // First submenu.
    .premium-navigation__submenu-container {
        left: auto;
        right: 0;

        // Nested submenus.
        // On smaller breakpoints, nested menus open downwards.
        .premium-navigation__submenu-container {
            left: -1px; // Border width.
            right: -1px;
        }
        @include break-medium {
            .premium-navigation__submenu-container {
                left: auto;
                right: 100%;
            }
        }
    }
}

// Default background and font color.
.wp-block-premium-navigation:not(.has-background) {
    .premium-navigation__submenu-container {
        // Set a background color for submenus so that they're not transparent.
        // NOTE TO DEVS - if refactoring this code, please double-check that
        // submenus have a default background color, this feature has regressed
        // several times, so care needs to be taken.
        background-color: #fff;
        color: #000;
        border: 1px solid rgba(0, 0, 0, 0.15);
    }
}

// Navigation block inner container.
.premium-navigation__container {
    display: flex;
    flex-wrap: var(--navigation-layout-wrap, wrap);
    flex-direction: var(--navigation-layout-direction, initial);
    justify-content: var(--navigation-layout-justify, initial);
    align-items: var(--navigation-layout-align, initial);

    // Reset the default list styles
    list-style: none;
    margin: 0;
    padding-left: 0;

    // Only hide the menu by default if responsiveness is active.
    .is-responsive {
        display: none;
    }
}

// Allow menu items to be spaced out by space-between when only navigation links are present.
.premium-navigation__container:only-child,
.wp-block-page-list:only-child {
    flex-grow: 1;
}

/**
 * Mobile menu.
 */
.overlay-menu-slide {
    .premium-navigation__responsive-container {
        display: flex;
        width: var(--overlay-menu-width, 600px);
        transform: translateX(calc(var(--overlay-menu-width, 600px) * -1));
        opacity: 0;
        transition: all 0.5s ease-in-out;
        &.is-menu-open {
            opacity: 1;
            transform: translateX(0);
        }
        &.pbg-break-point {
            --overlay-menu-width: 100% !important;
            box-sizing: border-box;
        }
    }
}

.premium-navigation__responsive-container {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    .premium-navigation__responsive-container-content {
        display: flex;
        flex-wrap: var(--navigation-layout-wrap, wrap);
        flex-direction: var(--navigation-layout-direction, initial);
        justify-content: var(--navigation-layout-justify, initial);
        align-items: var(--navigation-layout-align, initial);
    }

    // If the responsive wrapper is present but overlay is not open,
    // overlay styles shouldn't apply.
    &:not(.is-menu-open.is-menu-open) {
        color: inherit !important;
        background-color: inherit !important;
    }

    // Overlay menu.
    // Provide an opinionated default style for menu items inside.
    // Inherit as much as we can regarding colors, fonts, sizes,
    // but otherwise provide a baseline.
    // In a future version, we can explore more customizability.
    &.is-menu-open {
        display: flex; // Needs to be set to override "none".
        flex-direction: column;
        background-color: inherit;

        // Use em units to apply padding, so themes can more easily style this in various ways.
        padding: 2rem;

        // Allow modal to scroll.
        overflow: auto;

        // Give it a z-index just higher than the adminbar.
        z-index: 100000;

        .premium-navigation__responsive-container-content {
            // Add padding above to accommodate close button.
            padding-top: calc(2rem + #{$navigation-icon-size});

            // Don't crop the focus style.
            overflow: visible;

            // Override the container flex layout settings
            // because we want overlay menu to always display
            // as a column.
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;

            // Inherit alignment settings from container.
            align-items: var(
                --navigation-layout-justification-setting,
                inherit
            );

            // Always align the contents of the menu to the top.
            &,
            .wp-block-page-list,
            .premium-navigation__container {
                justify-content: flex-start;
            }

            // Always expand/unfold submenus inside the modal.
            .has-child .submenu-container,
            .has-child .premium-navigation__submenu-container {
                // Unset CSS that hides dropdown menus.
                display: none;
                opacity: 1;
                visibility: visible;
                height: auto;
                width: auto;
                overflow: initial;
                min-width: 200px;

                // Position and style.
                position: static;
                border: none;
                padding-left: 2rem;
                padding-right: 2rem;
                &.visible {
                    display: block;
                }
            }

            // Space unfolded items using gap and padding for submenus.
            .premium-navigation__submenu-container,
            .premium-navigation__container {
                gap: inherit;
            }

            // Apply top padding to nested submenus.
            .premium-navigation__submenu-container {
                padding-top: var(--wp--style--block-gap, 2em);
            }

            // A default padding is added to submenu items. It's not appropriate inside the modal.
            .premium-navigation-item__content {
                padding: 0;
            }

            // Default column display for overlay menu contents.
            .premium-navigation__container,
            .premium-navigation-item,
            .wp-block-page-list {
                display: flex;
                flex-direction: column;
                // Inherit alignment settings from container.
                align-items: var(
                    --navigation-layout-justification-setting,
                    initial
                );
            }
        }

        // Remove background colors for items inside the overlay menu.
        // Has to be !important to override global styles.
        .premium-navigation-item .premium-navigation__submenu-container,
        .premium-navigation-item,
        .wp-block-page-list {
            color: inherit !important;
            background: transparent !important;
        }

        // Override justification dropdown menu positioning rules.
        .premium-navigation__submenu-container.premium-navigation__submenu-container.premium-navigation__submenu-container.premium-navigation__submenu-container {
            right: auto;
            left: auto;
        }
    }

    &:not(.pbg-break-point) {
        &:not(.hidden-by-default) {
            &:not(.is-menu-open) {
                display: block;
                width: 100%;
                position: relative;
                z-index: auto;
                background-color: inherit;

                .premium-navigation__responsive-container-close {
                    display: none;
                }
            }
        }

        &.is-menu-open {
            // Override breakpoint-inherited submenu rules.
            .premium-navigation__submenu-container.premium-navigation__submenu-container.premium-navigation__submenu-container.premium-navigation__submenu-container {
                left: 0;
            }
        }
    }
}

// Default menu background and font color.
.wp-block-premium-navigation:not(.has-background)
    .premium-navigation__responsive-container.is-menu-open {
    background-color: #fff;
    color: #000;
}

// Overlay menu toggle button label
.premium-navigation__toggle_button_label {
    font-size: 1rem;
    font-weight: bold;
}

// Menu and close buttons.
.premium-navigation__responsive-container-open,
.premium-navigation__responsive-container-close {
    vertical-align: middle;
    cursor: pointer;
    color: currentColor;
    background: transparent;
    border: none;
    margin: 0;
    padding: 0;

    svg {
        fill: currentColor;
        pointer-events: none;
        display: block;
        width: $navigation-icon-size;
        height: $navigation-icon-size;
    }
}

// Button to open the menu.
.premium-navigation__responsive-container-open {
    display: flex;

    &:not(.always-shown) {
        &:not(.show) {
            display: none;
        }
    }
}

// Button to close the menus.
.premium-navigation__responsive-container-close {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 2; // Needs to be above the modal z index itself.
}

// The menu adds wrapping containers.
.premium-navigation__responsive-close {
    width: 100%;

    // This element is not keyboard accessible, and is focusable only using the mouse.
    // It is part of the MicroModal library that adds a scrim outside of a modal dialog that is not fullscreen,
    // where clicking that scrim closes the overlay just like the close button.
    // It should not have a visible focus rectangle.
    &:focus {
        outline: none;
    }
}

.is-menu-open .premium-navigation__responsive-close,
.is-menu-open .premium-navigation__responsive-dialog,
.is-menu-open .premium-navigation__responsive-container-content {
    box-sizing: border-box;
}

.premium-navigation__responsive-dialog {
    position: relative;
}

// Prevent scrolling of the parent content when the modal is open.
html.has-modal-open {
    overflow: hidden;
}
/* Keyframes */
@keyframes fill {
    0% {
        width: 0%;
        height: 1px;
    }
    50% {
        width: 100%;
        height: 1px;
    }
    100% {
        width: 100%;
        height: 100%;
        background: var(
            --pbg-links-hover-color,
            var(--wp--preset--color--primary)
        );
    }
}
