{"version":3,"file":"entrance-animation-front.js","mappings":";;;;;AAAA,IAAIA,aAAa,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,2BAA2B,CAAC;AAC1E,MAAMC,YAAY,GAAGC,MAAM,CAACC,WAAW,IAAIJ,QAAQ,CAACK,eAAe,CAACC,YAAY;AAEhF,IAAIP,aAAa,CAACQ,MAAM,GAAG,CAAC,EAAE;EAC1B,MAAMC,yBAAyB,GAAG,MAAM;IACpCT,aAAa,CAACU,OAAO,CAACC,YAAY,IAAI;MAClC,IAAIC,QAAQ;MACZ,MAAMC,MAAM,GAAG,gBAAgB;MAC/B,MAAMC,YAAY,GAAGC,KAAK,CAACC,IAAI,CAACL,YAAY,CAACM,SAAS,CAAC,CAACC,IAAI,CAACC,SAAS,IAAIA,SAAS,CAACC,QAAQ,CAACP,MAAM,CAAC,CAAC;MACrG,IAAIC,YAAY,EAAE;QACdF,QAAQ,GAAGE,YAAY,CAACO,OAAO,CAACR,MAAM,EAAE,EAAE,CAAC;MAC/C;MACA,MAAMS,iBAAiB,GAAGC,qBAAqB,CAACX,QAAQ,CAAC;MACzD,IAAI,CAACU,iBAAiB,EAAE;QACpB;MACJ;MACA,IAAIE,MAAM,GAAG,SAAS;MACtB,MAAM;QAAEC;MAAY,CAAC,GAAGF,qBAAqB;MAC7C,IAAInB,MAAM,CAACsB,UAAU,CAACD,WAAW,CAACE,OAAO,CAAC,CAACC,OAAO,EAAE;QAChDJ,MAAM,GAAG,SAAS;MACtB,CAAC,MAAM,IAAIpB,MAAM,CAACsB,UAAU,CAACD,WAAW,CAACI,MAAM,CAAC,CAACD,OAAO,IAAI,CAACxB,MAAM,CAACsB,UAAU,CAACD,WAAW,CAACK,MAAM,CAAC,CAACF,OAAO,EAAE;QACxGJ,MAAM,GAAG,QAAQ;MACrB,CAAC,MAAM,IAAIpB,MAAM,CAACsB,UAAU,CAACD,WAAW,CAACK,MAAM,CAAC,CAACF,OAAO,EAAE;QACtDJ,MAAM,GAAG,QAAQ;MACrB;MAEA,IAAIF,iBAAiB,EAAES,SAAS,CAACP,MAAM,CAAC,EAAE;QACtC,MAAMQ,QAAQ,GAAGrB,YAAY,CAACsB,qBAAqB,EAAE;QACrD,IAAID,QAAQ,CAACE,GAAG,IAAI/B,YAAY,EAAE;UAC9BQ,YAAY,CAACM,SAAS,CAACkB,GAAG,CAACb,iBAAiB,CAACS,SAAS,CAACP,MAAM,CAAC,CAAC;UAC/Db,YAAY,CAACyB,KAAK,CAACC,uBAAuB,GAAGf,iBAAiB,CAACgB,KAAK;UACpE3B,YAAY,CAACyB,KAAK,CAACG,iBAAiB,GAAGjB,iBAAiB,CAACkB,QAAQ,GAAI,GAAElB,iBAAiB,CAACkB,QAAS,IAAG,GAAG,EAAE;UAC1G7B,YAAY,CAACyB,KAAK,CAACK,cAAc,GAAGnB,iBAAiB,CAACoB,KAAK,GAAI,GAAEpB,iBAAiB,CAACoB,KAAM,IAAG,GAAG,EAAE;QACrG;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EACDtC,MAAM,CAACuC,gBAAgB,CAAC,QAAQ,EAAElC,yBAAyB,CAAC;EAC5DA,yBAAyB,EAAE;AAC/B,C","sources":["webpack://premium-blocks-for-gutenberg/./src/global-features/entrance-animation/front/index.js"],"sourcesContent":["let blocksElement = document.querySelectorAll('[class*=\"pbg-animation-\"]');\r\nconst windowHeight = window.innerHeight || document.documentElement.clientHeight;\r\n\r\nif (blocksElement.length > 0) {\r\n    const addBlockEntranceAnimation = () => {\r\n        blocksElement.forEach(blockElement => {\r\n            let clientId;\r\n            const prefix = 'pbg-animation-';\r\n            const pbgClassName = Array.from(blockElement.classList).find(className => className.includes(prefix));\r\n            if (pbgClassName) {\r\n                clientId = pbgClassName.replace(prefix, '');\r\n            }\r\n            const entranceAnimation = PBG_EntranceAnimation[clientId];\r\n            if (!entranceAnimation) {\r\n                return;\r\n            }\r\n            let device = 'Desktop';\r\n            const { breakPoints } = PBG_EntranceAnimation;\r\n            if (window.matchMedia(breakPoints.desktop).matches) {\r\n                device = 'Desktop';\r\n            } else if (window.matchMedia(breakPoints.tablet).matches && !window.matchMedia(breakPoints.mobile).matches) {\r\n                device = 'Tablet';\r\n            } else if (window.matchMedia(breakPoints.mobile).matches) {\r\n                device = 'Mobile';\r\n            }\r\n\r\n            if (entranceAnimation?.animation[device]) {\r\n                const bounding = blockElement.getBoundingClientRect();\r\n                if (bounding.top <= windowHeight) {\r\n                    blockElement.classList.add(entranceAnimation.animation[device]);\r\n                    blockElement.style.animationTimingFunction = entranceAnimation.curve;\r\n                    blockElement.style.animationDuration = entranceAnimation.duration ? `${entranceAnimation.duration}ms` : '';\r\n                    blockElement.style.animationDelay = entranceAnimation.delay ? `${entranceAnimation.delay}ms` : '';\r\n                }\r\n            }\r\n        })\r\n    }\r\n    window.addEventListener(\"scroll\", addBlockEntranceAnimation);\r\n    addBlockEntranceAnimation();\r\n}"],"names":["blocksElement","document","querySelectorAll","windowHeight","window","innerHeight","documentElement","clientHeight","length","addBlockEntranceAnimation","forEach","blockElement","clientId","prefix","pbgClassName","Array","from","classList","find","className","includes","replace","entranceAnimation","PBG_EntranceAnimation","device","breakPoints","matchMedia","desktop","matches","tablet","mobile","animation","bounding","getBoundingClientRect","top","add","style","animationTimingFunction","curve","animationDuration","duration","animationDelay","delay","addEventListener"],"sourceRoot":""}